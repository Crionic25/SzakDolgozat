/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.amnproject;

import static com.mycompany.amnproject.MainClass.con;
import static com.mycompany.amnproject.MainClass.fh;
import static com.mycompany.amnproject.MainClass.logger;
import static com.mycompany.amnproject.MainClass.pa;
import java.io.IOException;
import java.sql.*;
import java.util.Calendar;
import java.util.logging.FileHandler;
import java.util.logging.Handler;
import java.util.logging.SimpleFormatter;
import javax.swing.*;
import javax.swing.text.PlainDocument;
import static png.image.getImage;

/**
 *
 * @author Crionic
 */
public class NewJDialog extends JDialog {

    
    public NewJDialog() {
        super();
        initComponents();
          try {  
              
            Statement st = con.createStatement();
            ResultSet r=st.executeQuery("select Név from Beszállitó2");

        while (r.next()) {  

            blista.addItem(r.getString("Név"));  
        }
        
        } catch (SQLException e) {  
             System.out.println(e); 
                System.exit(0);
        }
          
           try {  
            
            Statement st = con.createStatement();
            ResultSet r=st.executeQuery("select név from anyagfajta2");

        while (r.next()) {  

            belista.addItem(r.getString("név"));  
        }
       
        } catch (Exception e) {  
            JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", JOptionPane.WARNING_MESSAGE);  
            System.exit(0);  
        }
        PlainDocument mennyi = (PlainDocument) menny.getDocument();
        mennyi.setDocumentFilter(new DigitFilter());   
        PlainDocument ár = (PlainDocument) ar.getDocument();
        ár.setDocumentFilter(new DigitFilter());   
  
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        belista = new javax.swing.JComboBox<>();
        blista = new javax.swing.JComboBox<>();
        menny = new javax.swing.JTextField();
        ar = new javax.swing.JTextField();
        kom = new javax.swing.JTextField();
        veg = new javax.swing.JTextField();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("AMNESIA nyilvántartó rendszer v1.5 Új Anyag");

        jLabel1.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        jLabel1.setText("Bejövő áru hozzáadása");

        jLabel2.setText("Beszállitó");

        jLabel3.setText("AnyagKód");

        jLabel4.setText("Mennyiség");

        jLabel5.setText("Ár");

        jLabel6.setText("Komment");

        jLabel7.setText("Végek");

        belista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "anyag nevek:" }));
        belista.setToolTipText("");
        belista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                belistaActionPerformed(evt);
            }
        });

        blista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Beszállitó nevek:" }));
        blista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blistaActionPerformed(evt);
            }
        });

        menny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mennyActionPerformed(evt);
            }
        });

        b1.setIcon(new ImageIcon(getImage("icons/save.png")));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setIcon(new ImageIcon(getImage("icons/megse3.png")));
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(b2)))
                        .addGap(271, 271, 271)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(b1)
                            .addComponent(belista, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(blista, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(veg, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kom, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ar, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(menny, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(blista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(belista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(menny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(kom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(veg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(119, 119, 119))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void belistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_belistaActionPerformed
       
    }//GEN-LAST:event_belistaActionPerformed

    private void blistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blistaActionPerformed
       
    }//GEN-LAST:event_blistaActionPerformed
    
    
    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
       try{
        //String sorsz[] = { "id" };
        
        String query = "insert into anyag1(beszállitó, anyagkód,  beszállit, anyag, beérk_menny, mennyiség, brutto_ár,ertek, szám_ár ,érk_dát, komment, végek, akt_ért, Selejt, Sel_ért, Több_hi, több_ért, sorszám)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
        //String query = "insert into anyag(beszállitó, anyagkód,  beszállit, anyag, beérk_menny, mennyiség, brutto_ár,ertek, szám_ár ,érk_dát, komment, végek, akt_ért, Selejt, Sel_ért, Több_hi, több_ért, )values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
        //PreparedStatement pst = con.prepareStatement(query, sorsz);
        PreparedStatement pst = con.prepareStatement(query);
        
        String kivbesz =  (String) blista.getSelectedItem();
        pst.setString(3, kivbesz.toUpperCase());
        pst.setInt(1, gettingBeId(kivbesz));
        String kivanyag =  (String) belista.getSelectedItem();
        pst.setString(4, kivanyag.toUpperCase());
        pst.setInt(2, gettingAnId(kivanyag));
        String b = menny.getText();
        double me = Double.parseDouble(b);
        pst.setDouble(5, me);
        pst.setDouble(6, me);
        String d = ar.getText();
        int sa = Integer.parseInt(d);
        pst.setInt(7, sa);
        double ertek= sa*me;
        pst.setDouble(8, ertek);
        float sza = (float) (sa/1.056);
        pst.setFloat(9, sza);
        java.sql.Date date = new java.sql.Date(Calendar.getInstance().getTime().getTime());
        pst.setDate(10, date);
        pst.setString(11, kom.getText().toUpperCase());
        pst.setString(12, veg.getText().toUpperCase());
        
        pst.setDouble(13,me*sa);
        pst.setDouble(14, 0);
        pst.setDouble(15, 0);
        pst.setDouble(16, 0);
        pst.setDouble(17, 0);
        kódUpdate();
        pst.setInt(18, Sorsz());
        
        
        int affectedRows = pst.executeUpdate();
        if (affectedRows == 0) {
            throw new SQLException("Creating user failed, no rows affected.");
        }
        jLabel8.setText(gettingBeId(kivbesz)+"-"+gettingAnId(kivanyag)+"-"+Sorsz());
        /*ResultSet rs = pst.getGeneratedKeys();
        if (rs.next()){
            long id = rs.getLong(1);
            System.out.println("Inserted ID -" + id);
            
        }*/
        
       }catch (SQLException | NumberFormatException e) {
                System.out.println(e); 
                JOptionPane.showMessageDialog(null, e);
                System.exit(0);
    } 
        try {  

            // This block configure the logger with handler and formatter  
            fh = new FileHandler("C:/Users/Crionic/Desktop/log.txt", true);  
            logger.addHandler(fh);
            SimpleFormatter formatter = new SimpleFormatter();  
            fh.setFormatter(formatter);  
           
            // the following statement is used to log any messages  
            logger.info(pa.getProperty("user")+" Mentette az anyagot.");  
            for(Handler h:logger.getHandlers())
                        {
                            h.close();   //must call h.close or a .LCK file will remain.
                        }
        } catch (SecurityException | IOException y) {  
            y.printStackTrace();  
        }
       ar.setText("");
       kom.setText("");
       menny.setText("");
       veg.setText("");
       belista.setSelectedIndex(0);
       blista.setSelectedIndex(0);
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed

         try {  

            // This block configure the logger with handler and formatter  
            fh = new FileHandler("C:/Users/Crionic/Desktop/log.txt", true);  
            logger.addHandler(fh);
            SimpleFormatter formatter = new SimpleFormatter();  
            fh.setFormatter(formatter);  
            
            // the following statement is used to log any messages  
            logger.info(pa.getProperty("user")+" kilépett az új anyagból.");  
            for(Handler h:logger.getHandlers())
                        {
                            h.close();   //must call h.close or a .LCK file will remain.
                        }
        } catch (SecurityException | IOException y) {  
            y.printStackTrace();  
        }
        dispose();
    }//GEN-LAST:event_b2ActionPerformed

    private void mennyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mennyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mennyActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ar;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JComboBox<String> belista;
    private javax.swing.JComboBox<String> blista;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField kom;
    private javax.swing.JTextField menny;
    private javax.swing.JTextField veg;
    // End of variables declaration//GEN-END:variables

    private int gettingBeId(String kivbesz) {
        int id = 0; 
        try{
            String poba = "SELECT id FROM beszállitó2 WHERE Név= ?";
            PreparedStatement asd = con.prepareStatement(poba);
            asd.setString(1, kivbesz);
            ResultSet rs = asd.executeQuery();
            while (rs.next()) {
                id = rs.getInt("id");
                return id;
            }
            
            }catch (SQLException e) {
                System.out.println(e);
            } 
        return id;
    }

    private int gettingAnId(String kivanyag) {
        int id = 0; 
        try{
            String poba = "SELECT id FROM anyagfajta2 WHERE Név= ?";
            PreparedStatement asd = con.prepareStatement(poba);
            asd.setString(1, kivanyag);
            ResultSet rs = asd.executeQuery();
            while (rs.next()) {
                id = rs.getInt("id");
                return id;
            }
            
            }catch (SQLException e) {
                System.out.println(e);
            } 
        return id;
    }


     public int Sorsz() {
        int value = 0;
        try{
            //Connection conn = DriverManager.getConnection("jdbc:sqlserver://127.0.0.1;databaseName=amn;user=dsa;password=asd");
            String query = "select Top 1 id from dbo.anyagSor Order by id DESC ";
            PreparedStatement st = con.prepareStatement(query);
            ResultSet rs = st.executeQuery();
            while (rs.next()) {
                value = rs.getInt(1);
                System.out.println(rs);
            }
            
        }catch(SQLException e){
             System.out.println(e);
        }
        
        return value;
    }

    private void kódUpdate() {
        try/*(Statement stmt = con.createStatement();)*/ {
            //Connection conn = DriverManager.getConnection("jdbc:sqlserver://CRIONIC_PC\\SQLEXPRESS:1433;databaseName=amn;user=dsa;password=asd");
        String SQL = "INSERT INTO anyagSor (valami) VALUES ('s')";
            Statement stmt = con.createStatement();
        int count = stmt.executeUpdate(SQL, Statement.RETURN_GENERATED_KEYS);
        ResultSet rs = stmt.getGeneratedKeys();

        ResultSetMetaData rsmd = rs.getMetaData();
        int columnCount = rsmd.getColumnCount();
        if (rs.next()) {
            do {
                for (int i=1; i<=columnCount; i++) {
                    String key = rs.getString(i);
                    System.out.println("KEY " + i + " = " + key);
                }
            } while(rs.next());
        }
        else {
            System.out.println("NO KEYS WERE GENERATED.");
        }
        
        }catch(SQLException e){
            
        }
    }
   
}
